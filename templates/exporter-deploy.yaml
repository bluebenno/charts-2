{{- $root := . }}
{{- if .Values.exporterEnabled }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-exporter
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: exporter
spec:
  replicas: 1
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
        component: exporter
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - command:
        - /bin/elasticsearch_exporter
        - -es.uri=http://{{ template "service.name" . }}
        - -es.all=true
        image: "{{ .Values.exporterImage.repository }}:{{ .Values.exporterImage.tag }}"
        securityContext:
          capabilities:
            drop:
            - SETPCAP
            - MKNOD
            - AUDIT_WRITE
            - CHOWN
            - NET_RAW
            - DAC_OVERRIDE
            - FOWNER
            - FSETID
            - KILL
            - SETGID
            - SETUID
            - NET_BIND_SERVICE
            - SYS_CHROOT
            - SETFCAP
          readOnlyRootFilesystem: true
        livenessProbe:
          httpGet:
            path: /health
            port: 9108
          initialDelaySeconds: 30
          timeoutSeconds: 10
        name: elasticsearch-exporter
        ports:
        - name: metrics
          containerPort: 9108
        readinessProbe:
          httpGet:
            path: /health
            port: 9108
          initialDelaySeconds: 10
          timeoutSeconds: 10
        resources:
{{ toYaml .Values.resources | indent 12 }}
      restartPolicy: Always
{{- end }}
