{{ $root := . }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-client
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: client
  annotations:
    secretupdater.ffx.io/skip_reload: "true"
spec:
  replicas: {{ .Values.replicaCount.client }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
        component: client
    spec:
      {{- if .Values.affinityEnabled }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            # Avoid scheduling on same node:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - {{ template "fullname" . }}
                topologyKey: kubernetes.io/hostname
            # Spread out across AZs:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - {{ template "fullname" . }}
                topologyKey: failure-domain.beta.kubernetes.io/zone
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: ES_NODE_NAME
              value: client-${HOSTNAME}

            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KUBERNETES_SERVICE
              value: {{ template "fullname" . }}-transport

            - name: ES_DISCOVERY_ZEN_MINIMUM_MASTER_NODES
              valueFrom:
                configMapKeyRef:
                  name: {{ template "fullname" . }}
                  key: es.discovery.zen.minimum.master.nodes

            - name: ES_GATEWAY_EXPECTED_DATA_NODES
              valueFrom:
                configMapKeyRef:
                  name: {{ template "fullname" . }}
                  key: es.gateway.expected_data_nodes

            - name: ES_GATEWAY_RECOVER_AFTER_DATA_NODES
              valueFrom:
                configMapKeyRef:
                  name: {{ template "fullname" . }}
                  key: es.discovery.zen.minimum.master.nodes

            - name: ES_GATEWAY_RECOVER_AFTER_TIME
              valueFrom:
                configMapKeyRef:
                  name: {{ template "fullname" . }}
                  key: es.gateway.recover_after_time

            - name: ES_JAVA_OPTS
              valueFrom:
                configMapKeyRef:
                  name: {{ template "fullname" . }}
                  key: es.java.opts.client

          {{- range $key, $value := .Values.config }}
            - name: {{ $key | upper | replace "." "_" }}
              valueFrom:
                configMapKeyRef:
                  name: {{ template "fullname" $root }}
                  key: {{ $key }}
          {{- end }}

          ports:
            - name: transport
              containerPort: {{ .Values.service.ports.transport.internalPort }}
            - name: http
              containerPort: {{ .Values.service.ports.http.internalPort }}

          livenessProbe:
            httpGet:
              path: {{ .Values.service.probePath }}
              port: {{ .Values.service.ports.http.internalPort }}
            initialDelaySeconds: 120
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: {{ .Values.service.probePath }}
              port: {{ .Values.service.ports.http.internalPort }}
            initialDelaySeconds: 10
            periodSeconds: 5

          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
