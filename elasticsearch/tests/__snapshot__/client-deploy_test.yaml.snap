has defaults:
  1: |
    replicas: 1
    revisionHistoryLimit: 5
    selector:
      matchLabels:
        app.kubernetes.io/component: client
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: elasticsearch
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    template:
      metadata:
        labels:
          app.kubernetes.io/component: client
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: elasticsearch
      spec:
        containers:
        - env:
          - name: ES_NODE_NAME
            value: ${HOSTNAME}
          - name: ES_DISCOVERY_ZEN_PING_UNICAST_HOSTS
            valueFrom:
              configMapKeyRef:
                key: es.discovery.zen.ping.unicast.hosts
                name: RELEASE-NAME-elasticsearch
          - name: ES_DISCOVERY_ZEN_MINIMUM_MASTER_NODES
            valueFrom:
              configMapKeyRef:
                key: es.discovery.zen.minimum.master.nodes
                name: RELEASE-NAME-elasticsearch
          - name: ES_GATEWAY_RECOVER_AFTER_DATA_NODES
            valueFrom:
              configMapKeyRef:
                key: es.gateway.recover_after_data_nodes
                name: RELEASE-NAME-elasticsearch
          - name: ES_GATEWAY_EXPECTED_DATA_NODES
            valueFrom:
              configMapKeyRef:
                key: es.gateway.expected_data_nodes
                name: RELEASE-NAME-elasticsearch
          - name: ES_GATEWAY_RECOVER_AFTER_TIME
            valueFrom:
              configMapKeyRef:
                key: es.gateway.recover_after_time
                name: RELEASE-NAME-elasticsearch
          image: mikelorant/elasticsearch:v1.0.1-elasticsearch6.5.1
          imagePullPolicy: Always
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/kill
                - "-15"
                - "1"
          livenessProbe:
            httpGet:
              path: /_cluster/health?local=true
              port: http
            initialDelaySeconds: 300
          name: elasticsearch
          ports:
          - containerPort: 9200
            name: http
            protocol: TCP
          - containerPort: 9300
            name: transport
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /_cluster/health
              port: http
          resources:
            limits:
              memory: 2Gi
          securityContext:
            capabilities:
              add:
              - IPC_LOCK
              - SYS_RESOURCE
          volumeMounts:
          - mountPath: /usr/share/elasticsearch/config/elasticsearch_custom.yml
            name: settings
            readOnly: true
            subPath: elasticsearch_custom.yml
        initContainers: null
        securityContext:
          fsGroup: 1000
        serviceAccountName: RELEASE-NAME-elasticsearch
        volumes:
        - configMap:
            items:
            - key: es.settings
              path: elasticsearch_custom.yml
            name: RELEASE-NAME-elasticsearch
          name: settings
